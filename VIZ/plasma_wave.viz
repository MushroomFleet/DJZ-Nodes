import numpy as np

def render(features, width, height, color_palette):
    """
    Renders a plasma wave visualization.
    
    Args:
        features (dict): Audio features including 'waveform', 'spectrum', 'bass', 'mids', 'highs'
        width (int): Output image width
        height (int): Output image height
        color_palette (list): List of (R,G,B) tuples for colors
        
    Returns:
        numpy.ndarray: RGB image of the visualization
    """
    image = np.zeros((height, width, 3), dtype=np.uint8)
    
    # Create plasma effect using sine waves modulated by audio features
    x = np.linspace(0, width, width)
    y = np.linspace(0, height, height)
    X, Y = np.meshgrid(x, y)
    
    # Create plasma pattern modulated by audio
    v = np.sin(X/30.0 + features['bass'] * 10)
    v += np.sin(Y/20.0 + features['mids'] * 10)
    v += np.sin((X+Y)/40.0 + features['highs'] * 10)
    v = (v + 3) / 6.0  # Normalize to 0-1 range
    
    # Map values to colors using vectorized operations
    color_indices = (v * (len(color_palette)-1)).astype(int)
    color_indices = np.clip(color_indices, 0, len(color_palette)-1)
    
    # Create RGB array from color palette
    palette_array = np.array(color_palette)
    
    # Map colors to image using advanced indexing
    image = palette_array[color_indices]
    
    return image
